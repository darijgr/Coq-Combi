<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Alt-Ergo" version="0.99.1" timelimit="11" memlimit="1000"/>
<prover id="2" name="Z3" version="4.3.2" timelimit="11" memlimit="1000"/>
<file name="../lrrule64.mlw" expanded="true">
<theory name="Spec" sum="3c416dce829fdfeeca040b92248937bb" expanded="true">
 <goal name="is_part_nonneg" expanded="true">
 </goal>
</theory>
<theory name="LRrule" sum="b146d61bd7fbcfb22251d70c5d400d18" expanded="true">
 <goal name="WP_parameter compute_width" expl="VC for compute_width">
 <transf name="split_goal_wp">
  <goal name="WP_parameter compute_width.1" expl="1. integer overflow">
  <proof prover="0"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="WP_parameter compute_width.2" expl="2. array63 creation size">
  <proof prover="0"><result status="valid" time="0.02" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter compute_width.3" expl="3. integer overflow">
  <proof prover="0"><result status="valid" time="0.01" steps="7"/></proof>
  </goal>
  <goal name="WP_parameter compute_width.4" expl="4. loop invariant init">
  <proof prover="0"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="WP_parameter compute_width.5" expl="5. loop invariant init">
  <proof prover="0"><result status="valid" time="0.02" steps="9"/></proof>
  </goal>
  <goal name="WP_parameter compute_width.6" expl="6. index in array63 bounds">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="WP_parameter compute_width.7" expl="7. index in array63 bounds">
  <proof prover="0"><result status="valid" time="0.02" steps="13"/></proof>
  </goal>
  <goal name="WP_parameter compute_width.8" expl="8. integer overflow">
  <proof prover="0"><result status="valid" time="0.47" steps="509"/></proof>
  </goal>
  <goal name="WP_parameter compute_width.9" expl="9. type invariant">
  <proof prover="0"><result status="valid" time="0.02" steps="15"/></proof>
  </goal>
  <goal name="WP_parameter compute_width.10" expl="10. index in array63 bounds">
  <proof prover="0"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="WP_parameter compute_width.11" expl="11. integer overflow">
  <proof prover="0"><result status="valid" time="0.02" steps="72"/></proof>
  </goal>
  <goal name="WP_parameter compute_width.12" expl="12. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="WP_parameter compute_width.13" expl="13. loop invariant preservation">
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter compute_width.14" expl="14. loop variant decrease">
  <proof prover="0"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="WP_parameter compute_width.15" expl="15. type invariant">
  <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="WP_parameter compute_width.16" expl="16. postcondition">
  <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="WP_parameter compute_width.17" expl="17. postcondition">
  <proof prover="0"><result status="valid" time="0.02" steps="23"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter max_array" expl="VC for max_array">
 <transf name="split_goal_wp">
  <goal name="WP_parameter max_array.1" expl="1. integer overflow">
  <proof prover="0"><result status="valid" time="0.01" steps="2"/></proof>
  </goal>
  <goal name="WP_parameter max_array.2" expl="2. integer overflow">
  <proof prover="0"><result status="valid" time="0.01" steps="3"/></proof>
  </goal>
  <goal name="WP_parameter max_array.3" expl="3. loop invariant init">
  <proof prover="0"><result status="valid" time="0.02" steps="4"/></proof>
  </goal>
  <goal name="WP_parameter max_array.4" expl="4. loop invariant init">
  <proof prover="0"><result status="valid" time="0.01" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter max_array.5" expl="5. index in array63 bounds">
  <proof prover="0"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="WP_parameter max_array.6" expl="6. index in array63 bounds">
  <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="WP_parameter max_array.7" expl="7. integer overflow">
  <proof prover="0"><result status="valid" time="0.03" steps="39"/></proof>
  </goal>
  <goal name="WP_parameter max_array.8" expl="8. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.02" steps="13"/></proof>
  </goal>
  <goal name="WP_parameter max_array.9" expl="9. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="WP_parameter max_array.10" expl="10. loop variant decrease">
  <proof prover="0"><result status="valid" time="0.02" steps="13"/></proof>
  </goal>
  <goal name="WP_parameter max_array.11" expl="11. integer overflow">
  <proof prover="0"><result status="valid" time="0.02" steps="38"/></proof>
  </goal>
  <goal name="WP_parameter max_array.12" expl="12. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="WP_parameter max_array.13" expl="13. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="WP_parameter max_array.14" expl="14. loop variant decrease">
  <proof prover="0"><result status="valid" time="0.02" steps="12"/></proof>
  </goal>
  <goal name="WP_parameter max_array.15" expl="15. postcondition">
  <proof prover="0"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter compute_shift" expl="VC for compute_shift">
 <transf name="split_goal_wp">
  <goal name="WP_parameter compute_shift.1" expl="1. integer overflow">
  <proof prover="0"><result status="valid" time="0.02" steps="5"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.2" expl="2. array63 creation size">
  <proof prover="0"><result status="valid" time="0.02" steps="4"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.3" expl="3. integer overflow">
  <proof prover="0"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.4" expl="4. loop invariant init">
  <proof prover="0"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.5" expl="5. loop invariant init">
  <proof prover="0"><result status="valid" time="0.01" steps="9"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.6" expl="6. index in array63 bounds">
  <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.7" expl="7. integer overflow">
  <proof prover="0"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.8" expl="8. integer overflow">
  <proof prover="0"><result status="valid" time="0.02" steps="38"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.9" expl="9. index in array63 bounds">
  <proof prover="0"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.10" expl="10. integer overflow">
  <proof prover="0"><undone/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.11" expl="11. type invariant">
  <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.12" expl="12. index in array63 bounds">
  <proof prover="0"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.13" expl="13. integer overflow">
  <proof prover="0"><result status="valid" time="0.17" steps="81"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.14" expl="14. loop invariant preservation">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.15" expl="15. loop invariant preservation">
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.16" expl="16. loop variant decrease">
  <proof prover="0"><result status="valid" time="0.02" steps="24"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.17" expl="17. type invariant">
  <proof prover="0"><result status="valid" time="0.02" steps="12"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.18" expl="18. postcondition">
  <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
  <proof prover="2"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="WP_parameter compute_shift.19" expl="19. postcondition">
  <proof prover="0"><result status="valid" time="0.02" steps="27"/></proof>
  <proof prover="2"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="WP_parameter lrrule" expl="VC for lrrule" expanded="true">
 </goal>
</theory>
</file>
</why3session>
